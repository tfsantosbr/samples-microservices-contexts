services:
  # SERVICES

  orders-api:
    build:
      context: ./src/Orders.API
      dockerfile: Dockerfile
    ports:
      - "5100:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - api-gateway-net

  products-api:
    build:
      context: ./src/Products.API
      dockerfile: Dockerfile
    ports:
      - "5200:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - api-gateway-net

  billing-api:
    build:
      context: ./src/Billing.API
      dockerfile: Dockerfile
    ports:
      - "5300:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - api-gateway-net

  payments-api:
    build:
      context: ./src/Payments.API
      dockerfile: Dockerfile
    ports:
      - "5400:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - api-gateway-net

  keycloak:
    image: quay.io/keycloak/keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_LOG_LEVEL: INFO
      KC_HEALTH_ENABLED: true
    volumes:
      - ./config/keycloak/realm.json:/opt/keycloak/data/import/realm-export.json:ro
    ports:
      - "8080:8080"
    command:
      - start-dev
      - --import-realm
    networks:
      - api-gateway-net

  # OBSERVABILITY

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./config/otel-collector/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    networks:
      - api-gateway-net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus-storage:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    ports:
      - 9090:9090
    networks:
      - api-gateway-net

  grafana:
    image: grafana/grafana
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana-storage:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - api-gateway-net

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./config/loki/loki-config.yaml:/etc/loki/loki-config.yaml
    ports:
      - "3100:3100"
    networks:
      - api-gateway-net

  tempo:
    image: grafana/tempo:latest
    command: -config.file=/etc/tempo.yaml
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # tempo
      - "4317" # otlp grpc
    networks:
      - api-gateway-net

volumes:
  grafana-storage:
  prometheus-storage:

networks:
  api-gateway-net:
    driver: bridge
